# this is a sample gitlab pipeline job
# By having a file called .gitlab-ci.yml in the project root
# Gitlab will automatically create a pipeline for the gitlab repo hosing the file

# Created by James Martin (jmartin@sxiq.com.au)

image: alpine # Use Alpine linux image for containers

# stages control the flow of the pipeline allowing admin to set the order of steps
# steps that implement the same stage will run in parallel
stages:
    - deploy_dev
    - test_dev
    - deploy_tst
    - test_tst
    - deploy_prd
    - test_prd
    - parallel_job_test
    

before_script: # This will execute on any container prior to running the defined script

# The following package manager works for ruby 2.5 linux images
#    - apt-get update -qq && apt-get install -y -qq sqlite3 libsqlite3-dev python3

# The following package manager works on Alpine Linux
    - apk update
    - apk add python3


dev_app_deploy:
    stage: deploy_dev
    script:
        - python3 helloworld.py
    environment:
        name: Testing
    only:  
        - master

dev_regression_test:
    stage: test_dev
    script:
        - which python3
    environment:
        name: Development
    when: on_success
    only: 
        - master

tst_app_deploy:
    stage: deploy_tst
    script:
        - which python3
    when: manual
    environment:
        name: Testing
    allow_failure: false
    only: 
        - master
    
tst_regression_test:
    stage: test_tst
    script:
        - which python3
    when: on_success
    environment:
        name: Testing
    only: 
        - master
    
prd_app_deploy:
    stage: deploy_prd
    script:
        - which python3
    environment:
        name: Production
    when: manual
    allow_failure: false
    only: 
        - master
    
prd_regression_test:
    stage: test_prd
    script:
        - which python3
    environment:
        name: Production
    when: on_success
    only: 
        - master

parallel_test_job_1:
    stage: parallel_job_test
    script:
        - which python3
    environment:
        name: Production
    when: on_success
    only: 
        - master
        
parallel_test_job_2:
    stage: parallel_job_test
    script:
        - which python3
    environment:
        name: Production
    when: on_success
    only: 
        - master